---
- name: 'Configure and start openbao'
  hosts: 'openbao'
  gather_facts: true
  become: true

  tasks:

    - name: 'Add environment variable to /root/.profile'
      ansible.builtin.lineinfile:
        path: '/root/.profile'
        regexp: '^export VAULT_ADDR'
        line: "export VAULT_ADDR='http://{{ ansible_default_ipv4['address'] }}:8200'"
        create: true
        owner: 'root'
        group: 'root'
        mode: '0644'

    - name: 'Add environment variable to /home/vagrant/.profile'
      ansible.builtin.lineinfile:
        path: '/home/vagrant/.profile'
        regexp: '^export VAULT_ADDR'
        line: "export VAULT_ADDR='http://{{ ansible_default_ipv4['address'] }}:8200'"
        create: true
        owner: 'vagrant'
        group: 'vagrant'
        mode: '0644'

    - name: 'Manage openbao user (add home directory)'
      ansible.builtin.user:
        name: 'openbao'
        home: '/var/lib/openbao/'
        create_home: true

    - name: 'Create openbao.service.d/'
      ansible.builtin.file:
        path: '/etc/systemd/system/openbao.service.d/'
        state: 'directory'
        owner: 'root'
        group: 'root'
        mode: '0755'
      notify:
        - 'Restart openbao.service'

    - name: 'Create openbao.service.d/override.conf'
      ansible.builtin.template:
        src: 'override.conf.j2'
        dest: '/etc/systemd/system/openbao.service.d/override.conf'
        owner: 'root'
        group: 'root'
        mode: '0644'
      notify:
        - 'Restart openbao.service'

    - name: 'Create /etc/openbao/openbao.hcl'
      ansible.builtin.template:
        src: 'openbao.hcl.j2'
        dest: '/etc/openbao/openbao.hcl'
        owner: 'openbao'
        group: 'openbao'
        mode: '0644'
      notify:
        - 'Restart openbao.service'

    - name: 'Start but do NOT enable the openbao.service (server is running in dev mode, all changes are lost after a restart...)'
      ansible.builtin.service:
        name: 'openbao.service'
        state: 'started'
        enabled: false

    - name: 'Flush handlers'
      ansible.builtin.meta: flush_handlers

    - name: 'Fetch OpenBao root token'
      ansible.builtin.slurp:
        src: '/var/lib/openbao/.vault-token'
      register: slurp_openbao_token

    - name: 'Save root token on Ansible control node'
      ansible.builtin.copy:
        dest: 'openbao_root_token'
        content: "{{ slurp_openbao_token.content | b64decode }}"
      delegate_to: 'localhost'
      become: false

    - name: 'Save root token for the root user'
      ansible.builtin.copy:
        dest: '/root/.vault-token'
        content: "{{ slurp_openbao_token.content | b64decode }}"
        owner: 'root'
        group: 'root'
        mode: '0600'

    - name: 'Save root token for vagrant user'
      ansible.builtin.copy:
        dest: '/home/vagrant/.vault-token'
        content: "{{ slurp_openbao_token.content | b64decode }}"
        owner: 'vagrant'
        group: 'vagrant'
        mode: '0600'

    - name: 'Print OpenBao root token'
      ansible.builtin.debug:
        msg: "The OpenBao root token is: {{ slurp_openbao_token.content | b64decode }}"

    - name: 'Wait until the OpenBao URL is reachable'
      ansible.builtin.uri:
        url: "http://{{ hostvars['openbao']['ansible_default_ipv4']['address'] }}:8200"
      register: result
      until: "result.status == 200"
      retries: 11
      delay: 10

  handlers:

    - name: 'Restart openbao.service'
      ansible.builtin.service:
        name: 'openbao.service'
        state: 'restarted'
        daemon_reload: true
